server_names_hash_bucket_size 64;

server {
	listen 80;
	listen 443 ssl;

	root /app/web;
	index index.php index.html index.htm;

	# Make site accessible from http://localhost/
    	ssl_certificate     /etc/pki/wildcard_certificate.crt;
    	ssl_certificate_key /etc/pki/wildcard_certificate.key;
    	ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    	ssl_ciphers         HIGH:!aNULL:!MD5;

	# Make site accessible from http://localhost/
	server_name SAMLIDP_HOSTNAME;

	# Disable sendfile as per https://docs.vagrantup.com/v2/synced-folders/virtualbox.html
	sendfile off;

	# Add stdout logging

	error_log /dev/stdout info;
	access_log /dev/stdout;

	# force https-redirects
    # if ($http_x_forwarded_proto != 'https') {    
    if ($scheme = http) {
        return 301 https://$server_name$request_uri;
    }    

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to index.html
		try_files $uri /app.php$is_args$args;
	}

    location ~ ^/(app_dev|config)\.php(/|$) {
        fastcgi_pass unix:/var/run/php-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
    }

    # PROD
    location ~ ^/app\.php(/|$) {
        fastcgi_pass unix:/var/run/php-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/app.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

	error_page 404 /404.html;
    location = /404.html {
            root /var/www/errors;
            internal;
    }

    location ^~ /ngd-style.css {
        alias /var/www/errors/style.css;
        access_log off;
    }

    location ^~ /ngd-sad.svg {
        alias /var/www/errors/sad.svg;
        access_log off;
    }

	# pass the PHP scripts to FastCGI server listening on socket
	#
	location ~ \.php$ {
        try_files $uri =404;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		fastcgi_pass unix:/var/run/php-fpm.sock;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
   		fastcgi_param SCRIPT_NAME $fastcgi_script_name;
		fastcgi_index index.php;
		include fastcgi_params;
	}

    location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
            expires           5d;
    }

	# deny access to . files, for security
	#
	location ~ /\. {
    		log_not_found off;
    		deny all;
	}

        location ^~ /.well-known {
                allow all;
                auth_basic off;
        }
}

server {
    listen 80;
    listen 443 ssl;

    root /app/vendor/simplesamlphp/simplesamlphp/www;
    index index.php index.html index.htm;

    # Make site accessible from http://localhost/
    ssl_certificate     /etc/pki/wildcard_certificate.crt;
    ssl_certificate_key /etc/pki/wildcard_certificate.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    # Make site accessible from http://localhost/
    server_name attributes.SAMLIDP_HOSTNAME;

    # Add stdout logging

    error_log /dev/stdout info;
    access_log /dev/stdout;

    # if ($http_x_forwarded_proto != 'https') {    
    if ($scheme = http) {
        return 301 https://$server_name$request_uri;
    }    


   location =/index.php {
        root /var/www/html/;
        fastcgi_pass unix:/var/run/php-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param PATH_INFO $fastcgi_path_info;        
   }

    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to index.html
        try_files $uri $uri/ =404;
    }

    error_page 404 /404.html;
    location = /404.html {
            root /var/www/errors;
            internal;
    }

    location ^~ /ngd-style.css {
        alias /var/www/errors/style.css;
        access_log off;
    }

    location ^~ /ngd-sad.svg {
        alias /var/www/errors/sad.svg;
        access_log off;
    }

    location ~ ^(?<prefix>/)(?<phpfile>.+?\.php)(?<pathinfo>/.*)?$ {
        fastcgi_pass unix:/var/run/php-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $realpath_root/$phpfile;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param PATH_INFO $pathinfo;
    }
    
    location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
        expires           5d;
    }

    # deny access to . files, for security
    #
    location ~ /\. {
        log_not_found off;
        deny all;
    }
}

server {
	listen 80;
	listen   [::]:80 default ipv6only=on; ## listen for ipv6
	listen 443 ssl;
	listen   [::]:443 ssl ipv6only=on; ## listen for ipv6

	root /app/vendor/simplesamlphp/simplesamlphp/www;
	index index.php index.html index.htm;

	# Make site accessible from http://localhost/
    ssl_certificate     /etc/pki/wildcard_certificate.crt;
    ssl_certificate_key /etc/pki/wildcard_certificate.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

	# Make site accessible from http://localhost/
	server_name *.SAMLIDP_HOSTNAME;

	# Disable sendfile as per https://docs.vagrantup.com/v2/synced-folders/virtualbox.html
	sendfile off;

	# Add stdout logging

	error_log /dev/stdout info;
	access_log /dev/stdout;

	# force https-redirects
    # if ($http_x_forwarded_proto != 'https') {    
    if ($scheme = http) {
        return 301 https://$host$request_uri;
    }    

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to index.html
		try_files $uri $uri/ =404;
	}

    location /simplesaml {
        alias /app/vendor/simplesamlphp/simplesamlphp/www;
    }


	error_page 404 /404.html;
    location = /404.html {
            root /var/www/errors;
            internal;
    }

    location ^~ /ngd-style.css {
        alias /var/www/errors/style.css;
        access_log off;
    }

    location ^~ /ngd-sad.svg {
        alias /var/www/errors/sad.svg;
        access_log off;
    }

    location ~ ^/.+\.php(/|$) {
        fastcgi_pass unix:/var/run/php-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }


	# pass the PHP scripts to FastCGI server listening on socket
	#
	location ~ \.php$ {
        try_files $uri =404;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		fastcgi_pass unix:/var/run/php-fpm.sock;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
   		fastcgi_param SCRIPT_NAME $fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
		fastcgi_index index.php;
		include fastcgi_params;
	}

    location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
        expires           5d;
    }

	# deny access to . files, for security
	#
	location ~ /\. {
		log_not_found off;
		deny all;
	}
}

